{"version":3,"sources":["slide.tsx","joyrideSteps.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","slide","height","color","textAlign","padding","spacing","bottonPosition","marginTop","display","justifyContent","button","width","backgroundColor","palette","common","white","title","marginBottom","subTitle","textDecoration","content","margin","Slide","props","classes","Fragment","className","id","Typography","variant","Button","disableElevation","onClick","setRun","steps","disableBeacon","styles","options","target","style","fontWeight","locale","back","close","last","next","skip","App","useState","run","continuous","scrollToFirstStep","showProgress","showSkipButton","scrollOffset","zIndex","primaryColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38ee3246.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  slide: {\n    height: \"95vh\",\n    color: \"#fff\",\n    textAlign: \"start\",\n    padding: theme.spacing(3),\n  },\n  bottonPosition: {\n    marginTop: theme.spacing(10),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  button: {\n    width: theme.spacing(45),\n    backgroundColor: theme.palette.common.white,\n    color: \"#0fbe94\",\n  },\n  title: {\n    marginBottom: theme.spacing(10),\n  },\n  subTitle: {\n    textDecoration: \"underline\",\n  },\n  content: {\n    margin: theme.spacing(5, 15),\n  },\n}));\n\nconst Slide = (props: Props) => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <div className={classes.slide}>\n        <div id=\"title\" className={classes.title}>\n          <Typography variant=\"h1\">React-Joyrideを</Typography>\n          <Typography variant=\"h1\">システムに実装したい</Typography>\n        </div>\n        <Typography variant=\"h4\">ma23305</Typography>\n        <div className={classes.bottonPosition}>\n          <Button\n            variant=\"contained\"\n            disableElevation\n            className={classes.button}\n            onClick={() => {\n              props.setRun(true);\n            }}\n          >\n            <Typography variant=\"h2\">START</Typography>\n          </Button>\n        </div>\n      </div>\n      <div className={classes.slide}>\n        <div id=\"overview\">\n          <Typography variant=\"h2\" className={classes.subTitle} id=\"reason\">\n            React-Joyrideとは\n          </Typography>\n          <div className={classes.content}>\n            <Typography variant=\"h3\">\n              スマホゲームのようなチュートリアルを\n            </Typography>\n            <Typography variant=\"h3\">簡単に実装できるライブラリ</Typography>\n          </div>\n        </div>\n      </div>\n      <div className={classes.slide}>\n        <Typography variant=\"h2\" className={classes.subTitle} id=\"reason\">\n          効果的な使い方\n        </Typography>\n        <div className={classes.content}>\n          <Typography variant=\"h3\">・新機能の使い方紹介</Typography>\n          <Typography variant=\"h3\">・システムの機能紹介</Typography>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\ntype Props = {\n  setRun: Function;\n};\n\nexport default Slide;\n","import React from \"react\";\nimport { Step } from \"react-joyride\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst steps: Step[] = [\n  {\n    disableBeacon: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#title\",\n    title: <Typography variant=\"h4\">という野望を叶えるために...</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">\n          責任を持ってReact-Joyrideを触ってみたので、\n        </Typography>\n        <Typography variant=\"h6\">皆さんに共有したいの会</Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#overview\",\n    title: <Typography variant=\"h4\">なぜ使いたいのか</Typography>,\n    content: (\n      <React.Fragment>\n        <ul>\n          <li>\n            <Typography variant=\"h6\" style={{ textAlign: \"start\" }}>\n              使ったことがないから\n            </Typography>\n          </li>\n          <li>\n            <Typography variant=\"h6\" style={{ textAlign: \"start\" }}>\n              便利そうだから\n            </Typography>\n          </li>\n          <li>\n            <Typography variant=\"h6\" style={{ textAlign: \"start\" }}>\n              ツール・システムの学習コストを減らせる\n            </Typography>\n          </li>\n          <li>\n            <Typography\n              variant=\"h6\"\n              style={{ textAlign: \"start\", fontWeight: \"bold\" }}\n            >\n              びっくりしてもらえそうだから\n            </Typography>\n          </li>\n        </ul>\n        <Typography variant=\"h6\">新技術チームっぽくない？</Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#reason\",\n    title: <Typography variant=\"h4\">ちなみに「joyride」の意味は…</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">けっこうやばい意味らしい。</Typography>\n        <Typography variant=\"h6\" style={{fontWeight:\"bold\"}}>Hey, come on! We gonna go for a joyride.</Typography>\n        <Typography variant=\"h6\">人生で一度は使ってみたいセリフランキング2位らしい…</Typography>\n      </React.Fragment>\n    ),\n  },\n];\n\nexport default steps;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Slide from \"./slide\";\nimport steps from \"./joyrideSteps\";\n\nimport Joyride from \"react-joyride\";\n// import Joyride, { CallBackProps, STATUS, ACTIONS, EVENTS } from \"react-joyride\";\n\nconst locale = {\n  back: \"戻る\",\n  close: \"閉じる\",\n  last: \"終わり\",\n  next: \"次へ\",\n  skip: \"スキップ\",\n};\n\nfunction App() {\n  const [run, setRun] = useState(false);\n  return (\n    <div className=\"App\">\n      <Slide setRun={setRun} />\n      <Joyride\n        // callback={handleJoyrideCallback}\n        run={run}\n        steps={steps}\n        locale={locale}\n        continuous={true}\n        scrollToFirstStep={true}\n        showProgress={true}\n        showSkipButton={true}\n        scrollOffset={0}\n        styles={{\n          options: {\n            zIndex: 10000,\n            primaryColor: \"#0fbe94\",\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}