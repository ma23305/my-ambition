{"version":3,"sources":["slide.tsx","joyrideSteps.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","slide","minHeight","color","textAlign","padding","spacing","bottonPosition","marginTop","display","justifyContent","button","width","backgroundColor","palette","common","white","title","marginBottom","subTitle","textDecoration","content","margin","code","fontFamily","emphasis","fontWeight","Slide","props","classes","Fragment","className","id","Typography","variant","Button","disableElevation","onClick","setRun","gutterBottom","href","target","rel","Dialog","open","DialogTitle","Divider","DialogContent","styleCode","steps","disableBeacon","hideCloseButton","styles","options","style","localeEn","back","close","last","next","skip","localeJa","App","useState","run","setOpen","stepIndex","setStepIndex","callback","data","action","index","status","type","finishedStatuses","STATUS","FINISHED","SKIPPED","EVENTS","STEP_AFTER","includes","ACTIONS","PREV","TARGET_NOT_FOUND","setTimeout","console","groupCollapsed","log","groupEnd","locale","continuous","scrollToFirstStep","showProgress","zIndex","primaryColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0f1a506.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\n\nconst useStyles = makeStyles((theme) => ({\n  slide: {\n    minHeight: \"95vh\",\n    color: \"#fff\",\n    textAlign: \"start\",\n    padding: theme.spacing(3),\n  },\n  bottonPosition: {\n    marginTop: theme.spacing(10),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  button: {\n    width: theme.spacing(45),\n    backgroundColor: theme.palette.common.white,\n    color: \"#0fbe94\",\n  },\n  title: {\n    marginBottom: theme.spacing(10),\n  },\n  subTitle: {\n    textDecoration: \"underline\",\n  },\n  content: {\n    margin: theme.spacing(5, 15),\n    \" & > h3\": {\n      \"& > a\": {\n        color: \"#e0ffff\",\n      },\n    },\n  },\n  code: {\n    backgroundColor: \"rgba(0,0,0,0.3)\",\n    padding: theme.spacing(1),\n    \"& > h3\": {\n      fontFamily:\n        'MeiryoKe_Gothic, \"Ricty Diminished\", \"Osaka－等幅\", \"Osaka-等幅\", Osaka-mono, \"ＭＳ ゴシック\", \"MS Gothic\", \"Courier New\", Courier, Monaco, Menlo, Consolas, \"Lucida Console\", monospace',\n    },\n  },\n  emphasis: {\n    fontWeight: \"bold\",\n  },\n}));\n\nconst Slide = (props: Props) => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <div className={classes.slide}>\n        <div id=\"title\" className={classes.title}>\n          <Typography variant=\"h1\">React-Joyrideを</Typography>\n          <Typography variant=\"h1\">システムに実装したい</Typography>\n        </div>\n        <Typography variant=\"h4\">ma23305</Typography>\n        <div className={classes.bottonPosition}>\n          <Button\n            variant=\"contained\"\n            disableElevation\n            className={classes.button}\n            onClick={() => {\n              props.setRun(true);\n            }}\n          >\n            <Typography variant=\"h2\">START</Typography>\n          </Button>\n        </div>\n      </div>\n\n      <div className={classes.slide}>\n        <div id=\"overview\">\n          <Typography variant=\"h2\" className={classes.subTitle}>\n            React-Joyrideとは\n          </Typography>\n          <div className={classes.content}>\n            <Typography variant=\"h3\">\n              スマホゲームのようなチュートリアルを\n            </Typography>\n            <Typography variant=\"h3\">簡単に実装できるライブラリ</Typography>\n          </div>\n        </div>\n        <div className={classes.content} id=\"reason\">\n          <Typography variant=\"h5\">\n            Hey, come on! We gonna go for a joyride.\n          </Typography>\n        </div>\n      </div>\n\n      <div className={classes.slide}>\n        <div id=\"usage\">\n          <Typography variant=\"h2\" className={classes.subTitle}>\n            効果的な使い方\n          </Typography>\n          <div className={classes.content}>\n            <Typography variant=\"h3\" gutterBottom>\n              ・新機能の使い方紹介\n            </Typography>\n            <Typography variant=\"h3\" gutterBottom>\n              ・システムの機能紹介\n            </Typography>\n          </div>\n        </div>\n        <br />\n        <br />\n        <div className={classes.content} id=\"usage-emphasis\">\n          <Typography variant=\"h3\" className={classes.emphasis}>\n            「もっと作業効率化できるように作ったんだけどな」\n          </Typography>\n          <Typography variant=\"h3\" className={classes.emphasis}>\n            「この機能、とても便利なのに使われてないな」\n          </Typography>\n          <Typography variant=\"h3\">実装してるからこそ思うことを</Typography>\n          <Typography variant=\"h3\">\n            「使い方を教える」という体で利用者に伝えられる！\n          </Typography>\n        </div>\n      </div>\n\n      <div className={classes.slide}>\n        <div id=\"setup\">\n          <Typography variant=\"h2\" className={classes.subTitle}>\n            導入方法\n          </Typography>\n          <div className={classes.content}>\n            <div className={classes.code}>\n              <Typography variant=\"h3\">npm i react-joyride</Typography>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className={classes.slide}>\n        <div id=\"steps\">\n          <Typography variant=\"h2\" className={classes.subTitle}>\n            Stepsを定義しよう\n          </Typography>\n          <div className={classes.content}>\n            <div className={classes.code}>\n              <Typography variant=\"h3\">{\"steps: [\"}</Typography>\n              <Typography variant=\"h3\">{\"　{\"}</Typography>\n              <Typography variant=\"h3\">\n                {\"　　target: '.my-first-step',\"}\n              </Typography>\n              <Typography variant=\"h3\">\n                {\"　　content: 'This is my awesome feature!',\"}\n              </Typography>\n              <Typography variant=\"h3\">{\"　},\"}</Typography>\n              <Typography variant=\"h3\">{\"　...\"}</Typography>\n              <Typography variant=\"h3\">{\"]\"}</Typography>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className={classes.slide}>\n        <div id=\"moveJoyride\">\n          <Typography variant=\"h2\" className={classes.subTitle}>\n            React-Joyrideを動かそう\n          </Typography>\n          <div className={classes.content}>\n            <div className={classes.code}>\n              <Typography variant=\"h3\">\n                {\"const [run, setRun] = useState(false);\"}\n              </Typography>\n              <Typography variant=\"h3\">{\"return (\"}</Typography>\n              <Typography variant=\"h3\">{\"　<Joyride\"}</Typography>\n              <Typography variant=\"h3\">\n                {\"　　run={run}　　　　// Joyride起動する/しない\"}\n              </Typography>\n              <Typography variant=\"h3\">\n                {\"　　steps={steps}　　// さっき定義したstepsを渡す\"}\n              </Typography>\n              <Typography variant=\"h3\">{\"　　...\"}</Typography>\n              <Typography variant=\"h3\">{\"　/>\"}</Typography>\n              <Typography variant=\"h3\">{\")\"}</Typography>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className={classes.slide}>\n        <div id=\"locale\">\n          <Typography variant=\"h2\" className={classes.subTitle}>\n            日本語化しよう\n          </Typography>\n          <div className={classes.content}>\n            <div className={classes.code}>\n              <Typography variant=\"h3\">{\"locale = {\"}</Typography>\n              <Typography variant=\"h3\">{'　back: \"戻る\",'}</Typography>\n              <Typography variant=\"h3\">{'　close: \"閉じる\",'}</Typography>\n              <Typography variant=\"h3\">{'　last: \"終わり\",'}</Typography>\n              <Typography variant=\"h3\">{'　next: \"次へ\",'}</Typography>\n              <Typography variant=\"h3\">{'　skip: \"スキップ\"'}</Typography>\n              <Typography variant=\"h3\">{\"}\"}</Typography>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className={classes.slide}>\n        <div id=\"color\">\n          <Typography variant=\"h2\" className={classes.subTitle}>\n            色を変えよう\n          </Typography>\n          <div className={classes.content}>\n            <div className={classes.code}>\n              <Typography variant=\"h3\">{\"<Joyride\"}</Typography>\n              <Typography variant=\"h3\">{\"　styles={{\"}</Typography>\n              <Typography variant=\"h3\">{\"　　options: {\"}</Typography>\n              <Typography variant=\"h3\">\n                {'　　　primaryColor: \"#0fbe94\",'}\n              </Typography>\n              <Typography variant=\"h3\">{\"　　}\"}</Typography>\n              <Typography variant=\"h3\">{\"　}}\"}</Typography>\n              <Typography variant=\"h3\">{\"/>\"}</Typography>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className={classes.slide}>\n        <div id=\"customize\">\n          <Typography variant=\"h2\" className={classes.subTitle}>\n            もっと細かくカスタマイズしよう\n          </Typography>\n          <div className={classes.content}>\n            <div className={classes.code}>\n              <Typography variant=\"h3\">{\"<Joyride\"}</Typography>\n              <Typography variant=\"h3\">\n                {\"　callback={handleJoyrideCallback}\"}\n              </Typography>\n              <Typography variant=\"h3\">{\"　...\"}</Typography>\n              <Typography variant=\"h3\">{\"/>\"}</Typography>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className={classes.slide}>\n        <Typography variant=\"h2\" className={classes.subTitle}>\n          コールバック関数をもっと詳しく\n        </Typography>\n        <div className={classes.content}>\n          <div className={classes.code}>\n            <Typography variant=\"h3\" id=\"joyride-import\">\n              {\"import { CallBackProps, STATUS, ACTIONS, EVENTS }\"}\n              <br />\n              {\"　from 'react-joyride';\"}\n            </Typography>\n            <Typography variant=\"h3\">{\"　\"}</Typography>\n            <Typography variant=\"h3\">\n              {\"const handleJoyrideCallback = (data: CallBackProps) => {\"}\n            </Typography>\n            <Typography variant=\"h3\">\n              {\"　const { action, index, status, type } = data;\"}\n            </Typography>\n            <Typography variant=\"h3\" id=\"callback-sample\">\n              {\"　const finishedStatuses: string[]\"}\n              <br />\n              {\"　　 = [STATUS.FINISHED, STATUS.SKIPPED];\"}\n              <br />\n              <br />\n              {\"　if (finishedStatuses.includes(status)) {\"}\n              <br />\n              {\"　　setRun(false);\"}\n              <br />\n              {\"　}\"}\n            </Typography>\n            <Typography variant=\"h3\">{\"}\"}</Typography>\n          </div>\n        </div>\n      </div>\n\n      <div className={classes.slide}>\n        <Typography variant=\"h2\" className={classes.subTitle} id=\"thoughts\">\n          実際にコードを書いて感じたこと\n        </Typography>\n        <div className={classes.content}>\n          <Typography variant=\"h3\" id=\"thoughts1\" gutterBottom>\n            ・紹介したい機能が複雑であればあるほど制御が大変\n          </Typography>\n          <Typography variant=\"h3\" id=\"thoughts2\" gutterBottom>\n            ・そもそもこいつってなんて言えば伝わる？\n          </Typography>\n          <Typography variant=\"h3\" id=\"thoughts3\" gutterBottom>\n            ・保守が大変そう\n          </Typography>\n          <Typography variant=\"h3\" id=\"thoughts4\" gutterBottom>\n            ・公式のDemoにある「次へ」を押さずに進むやつやりたい\n          </Typography>\n          <Typography variant=\"h3\" id=\"thoughts5\" gutterBottom>\n            ・<span className={classes.code}>{\"<Joyride ...\"}</span>\n            のタグを分ける\n          </Typography>\n          <Typography variant=\"h3\" id=\"thoughts6\" gutterBottom>\n            ・stepsの定義ファイルは外に出そう\n          </Typography>\n          <Typography variant=\"h3\" id=\"thoughts7\" gutterBottom>\n            ・コールバック関数、コメントは多めでちょうどいい\n          </Typography>\n        </div>\n      </div>\n\n      <div className={classes.slide}>\n        <Typography variant=\"h2\" className={classes.subTitle} id=\"thoughts\">\n          まとめ\n        </Typography>\n        <div className={classes.content}>\n          <Typography variant=\"h3\" id=\"thoughts1\">\n            React-Joyride、使いたくなったでしょ？\n          </Typography>\n          <Typography variant=\"h3\" id=\"thoughts1\" gutterBottom>\n            システムに組み込まれてたら、「おっ？！」ってなるでしょ？\n          </Typography>\n          <Typography variant=\"h3\" id=\"thoughts1\">\n            お客さまから要望されている機能ではないけれど、\n          </Typography>\n          <Typography variant=\"h3\" id=\"thoughts1\" gutterBottom>\n            とにかく使ってみたいんです。\n          </Typography>\n          <Typography variant=\"h3\" id=\"thoughts1\">\n            最低限抑えるべきポイントがわかれば、\n          </Typography>\n          <Typography variant=\"h3\" id=\"thoughts1\">\n            多少複雑な機能でも、Joyrideで見せることができるはず！\n          </Typography>\n        </div>\n        <div className={classes.content}>\n          <Typography variant=\"h4\">\n            <ArrowDownwardIcon />\n            に参考資料あります\n          </Typography>\n        </div>\n      </div>\n\n      <div className={classes.slide}>\n        <Typography variant=\"h2\" className={classes.subTitle}>\n          参考資料\n        </Typography>\n        <div className={classes.content}>\n          <Typography variant=\"h3\" gutterBottom>\n            <a\n              href=\"https://github.com/gilbarbara/react-joyride\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <OpenInNewIcon />\n              React-Joyride GitHub\n            </a>\n          </Typography>\n          <Typography variant=\"h3\" gutterBottom>\n            <a\n              href=\"https://docs.react-joyride.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <OpenInNewIcon />\n              React-Joyride ドキュメント\n            </a>\n          </Typography>\n          <Typography variant=\"h3\" gutterBottom>\n            <a\n              href=\"https://react-joyride.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <OpenInNewIcon />\n              React-Joyride デモ\n            </a>\n          </Typography>\n        </div>\n      </div>\n\n      <Dialog open={props.open} id=\"dialog\">\n        <DialogTitle>モーダルの要素をtargetにしたい</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <Typography variant=\"subtitle1\">\n            Joyrideのコールバックが呼ばれたタイミングだと、\n            <br />\n            モーダルが表示前なので、ターゲットが無いよって怒られる。\n            <br />\n            なので、一度Joyrideを切って、モーダル出して、再びJoyrideを起動させる\n            <br />\n            ここにコードを書くには複雑すぎるので、\n            <br />\n            これは実際のコードを見て欲しい。\n          </Typography>\n        </DialogContent>\n      </Dialog>\n    </React.Fragment>\n  );\n};\n\ntype Props = {\n  setRun: Function;\n  open: boolean;\n};\n\nexport default Slide;\n","import React from \"react\";\nimport { Step } from \"react-joyride\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styleCode = {\n  fontFamily:\n    'MeiryoKe_Gothic, \"Ricty Diminished\", \"Osaka－等幅\", \"Osaka-等幅\", Osaka-mono, \"ＭＳ ゴシック\", \"MS Gothic\", \"Courier New\", Courier, Monaco, Menlo, Consolas, \"Lucida Console\", monospace',\n};\n\nconst steps: Step[] = [\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#title\",\n    title: <Typography variant=\"h4\">という野望を叶えるために...</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">\n          責任を持ってReact-Joyrideを触ってみたので、\n        </Typography>\n        <Typography variant=\"h6\">皆さんに共有したいの会</Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#overview\",\n    title: <Typography variant=\"h4\">なぜ使いたいのか</Typography>,\n    content: (\n      <React.Fragment>\n        <ul>\n          <li>\n            <Typography variant=\"h6\" style={{ textAlign: \"start\" }}>\n              使ったことがないから\n            </Typography>\n          </li>\n          <li>\n            <Typography variant=\"h6\" style={{ textAlign: \"start\" }}>\n              便利そうだから\n            </Typography>\n          </li>\n          <li>\n            <Typography variant=\"h6\" style={{ textAlign: \"start\" }}>\n              ツール・システムの学習コストを減らせる\n            </Typography>\n          </li>\n          <li>\n            <Typography\n              variant=\"h6\"\n              style={{ textAlign: \"start\", fontWeight: \"bold\" }}\n            >\n              びっくりしてもらえそうだから\n            </Typography>\n          </li>\n        </ul>\n        <Typography variant=\"h6\">新技術チームっぽくない？</Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#reason\",\n    title: <Typography variant=\"h4\">ちなみに「joyride」の意味は…</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">けっこうやばい意味らしい。</Typography>\n        <Typography variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n          さあ、車をブッ飛ばしに行くぜ。\n        </Typography>\n        <Typography variant=\"h6\">\n          人生で一度は使ってみたいセリフランキング2位らしい…\n        </Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#usage\",\n    title: <Typography variant=\"h4\">なんで？</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">\n          長期的に使うものや使用頻度の高いものに\n        </Typography>\n        <Typography variant=\"h6\">\n          実装するのが効果的なんじゃないかなと思料\n        </Typography>\n        <Typography variant=\"h6\">あまり使用頻度の高くない</Typography>\n        <Typography variant=\"h6\">申し込み画面には向かない感じ</Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#usage-emphasis\",\n    title: <Typography variant=\"h4\">ここが一番大事！</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">\n          実際に使う人たちに、一番効率的に使って欲しい\n        </Typography>\n        <Typography variant=\"h6\">\n          けれど、その使い方がしっかり現場まで伝わっているか？\n        </Typography>\n        <Typography variant=\"h6\">\n          というのは、我々では関与できない部分。\n        </Typography>\n        <Typography variant=\"h6\">\n          ならば、システムの中に組み込んでしまえ！！\n        </Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#setup\",\n    title: <Typography variant=\"h4\">準備完了！</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">\n          さぁ！ここからはドキュメントを読みながら\n        </Typography>\n        <Typography variant=\"h6\">実際にコードを書いていこう♪</Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#steps\",\n    title: <Typography variant=\"h4\">Stepsって？</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">吹き出し1個1個の定義した変数</Typography>\n        <Typography variant=\"h6\">targetでどこにハイライトするか</Typography>\n        <Typography variant=\"h6\">contentで本文を指定する</Typography>\n        <Typography variant=\"h6\">\n          他にもいろいろ指定できるので、必要に応じて追記しよう\n        </Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#moveJoyride\",\n    title: <Typography variant=\"h4\">詳しく！</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">\n          Stepsで定義したtargetが表示されるところに記述しよう。\n        </Typography>\n        <Typography variant=\"h6\">(App.tsxとかindex.tsxが楽？)</Typography>\n        <Typography variant=\"h6\">\n          runの値はボタン押下で切り替えよう！\n        </Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#locale\",\n    title: <Typography variant=\"h4\">ほら、変わったでしょ？</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">さっきのJoyride本体に追記しよう！</Typography>\n        <div\n          style={{\n            backgroundColor: \"rgba(0,0,0,0.6)\",\n            padding: 4,\n            margin: \"8,0\",\n            color: \"#FFF\",\n            textAlign: \"start\",\n          }}\n        >\n          <Typography variant=\"h6\" style={styleCode}>\n            {\"<Joyride\"}\n          </Typography>\n          <Typography variant=\"h6\" style={styleCode}>\n            {\"　...\"}\n          </Typography>\n          <Typography variant=\"h6\" style={styleCode}>\n            {\"　locale={locale}\"}\n          </Typography>\n          <Typography variant=\"h6\" style={styleCode}>\n            {\"/>\"}\n          </Typography>\n        </div>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#color\",\n    title: <Typography variant=\"h4\">変わったでしょ？</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">\n          デフォルトの色がだいぶビビットなので、\n        </Typography>\n        <Typography variant=\"h6\">これで好きな色に変えましょう！</Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#customize\",\n    title: <Typography variant=\"h4\">ここからはいばらの道だぞ</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">\n          callbackがJoyrideが動くたびに呼ばれるよ\n        </Typography>\n        <Typography variant=\"h6\">\n          どのボタンを押されたか、インデックス、\n        </Typography>\n        <Typography variant=\"h6\">引数としていろいろ取得できるので、</Typography>\n        <Typography variant=\"h6\">\n          それを使って自分のやりたいことに合わせてカスタマイズ！\n        </Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#joyride-import\",\n    title: <Typography variant=\"h4\">各種インポート</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">\n          コールバック関数の引数や、定数をインポートしましょう\n        </Typography>\n        <Typography variant=\"h6\">\n          実際に何が返ってくるかは、ドキュメントを見てください\n        </Typography>\n        <Typography variant=\"h6\">\n          この時はこのstatusとactionが返ってくるから...\n        </Typography>\n        <Typography variant=\"h6\">\n          と、やりながら組み立てていくのがわかりやすい\n        </Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#callback-sample\",\n    title: <Typography variant=\"h4\">このコードは...?</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">最後のStepsまで終わった、</Typography>\n        <Typography variant=\"h6\">もしくはスキップボタンを押した時に</Typography>\n        <Typography variant=\"h6\">runをfalseにしているよ</Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#dialog\",\n    title: <Typography variant=\"h4\">多分だけど...</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">\n          もっと良い書き方があるはず。募集中！！\n        </Typography>\n        <Typography variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n          一度切ってからまた起動する\n        </Typography>\n        <Typography variant=\"h6\">これに気づくまでが長かった...</Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#thoughts\",\n    title: <Typography variant=\"h4\">反省とこれから</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">\n          わからないまま書き始め、もっと良い書き方あったよなぁと\n        </Typography>\n        <Typography variant=\"h6\">\n          これから書く際は私の残念コードを反面教師にしてくれ！\n        </Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#thoughts1\",\n    title: <Typography variant=\"h4\">なんで？</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">\n          モーダルやページ遷移があると本当に厄介\n        </Typography>\n        <Typography variant=\"h6\">\n          一部処理は飛ばして画面遷移だけ見せたいとか\n        </Typography>\n        <Typography variant=\"h6\">\n          Stateを変更したい！とかなるからほんと辛い。\n        </Typography>\n        <Typography variant=\"h6\">\n          けど、単純なものはホント楽に実装できる。\n        </Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#thoughts2\",\n    title: <Typography variant=\"h4\">なんで？</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">\n          ヘルプ？チュートリアル？ツアー？使い方？ガイド？\n        </Typography>\n        <Typography variant=\"h6\">考えれば考えるほどわからない。</Typography>\n        <Typography variant=\"h6\">\n          ヘルプかなと思ってサンプル作ったけど、\n        </Typography>\n        <Typography variant=\"h6\">\n          使い方の方が良かったかなとか思い始めてる。\n        </Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#thoughts3\",\n    title: <Typography variant=\"h4\">なんで？</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">\n          1個目でも言ったけど、機能が複雑だと\n        </Typography>\n        <Typography variant=\"h6\">\n          コールバックの中身がすぐ膨大な量のコードになる\n        </Typography>\n        <Typography variant=\"h6\">\n          あんなのパッと見てすぐわからないでしょ？\n        </Typography>\n        <Typography variant=\"h6\">\n          頑張って読みやすいコードにしようと心がけていはいる。\n        </Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#thoughts4\",\n    title: <Typography variant=\"h4\">なんで？</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">\n          今作っているシステムの構成では無理そう？\n        </Typography>\n        <Typography variant=\"h6\">\n          次へを押すんじゃなくて、実際に押すはずのボタンを押して\n        </Typography>\n        <Typography variant=\"h6\">\n          次に進めたい。その方がわかりやすそうじゃないですか？\n        </Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#thoughts5\",\n    title: <Typography variant=\"h4\">なんで？</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">\n          コールバック関数がカオスなことになるから。\n        </Typography>\n        <Typography variant=\"h6\">\n          1つのStepsに1つのJoyrideタグにしたほうが良いかなーって\n        </Typography>\n        <Typography variant=\"h6\">無理に1つにまとめる必要はなさそう</Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#thoughts6\",\n    title: <Typography variant=\"h4\">なんで？</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">どうしても長くなるから。</Typography>\n        <Typography variant=\"h6\">\n          これにより、「次へ」ボタン押さずに...っていうのは\n        </Typography>\n        <Typography variant=\"h6\">絶望的になる気がするけど...</Typography>\n        <Typography variant=\"h6\">そこにそこまでのこだわりはない。</Typography>\n        <Typography variant=\"h6\">可読性の方が大事。</Typography>\n      </React.Fragment>\n    ),\n  },\n  {\n    disableBeacon: true,\n    hideCloseButton: true,\n    styles: {\n      options: {\n        width: \"600px\",\n      },\n    },\n    target: \"#thoughts7\",\n    title: <Typography variant=\"h4\">なんで？</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">わかりやすくするためよ！</Typography>\n        <Typography variant=\"h6\">複雑になると、</Typography>\n        <Typography variant=\"h6\">\n          後から読み返して自分でもわからなくなるわ！！\n        </Typography>\n        <Typography variant=\"h6\">\n          「なんでこれで動いてんの？」ってなる。\n        </Typography>\n      </React.Fragment>\n    ),\n  },\n];\n\nexport default steps;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Slide from \"./slide\";\nimport steps from \"./joyrideSteps\";\n\n// eslint-disable-next-line\nimport Joyride, { CallBackProps, STATUS, ACTIONS, EVENTS } from \"react-joyride\";\n\nconst localeEn = {\n  back: \"Back\",\n  close: \"Close\",\n  last: \"Last\",\n  next: \"Next\",\n  open: \"Open the dialog\",\n  skip: \"Skip\",\n};\n\nconst localeJa = {\n  back: \"戻る\",\n  close: \"閉じる\",\n  last: \"終わり\",\n  next: \"次へ\",\n  skip: \"スキップ\",\n};\n\nfunction App() {\n  const [run, setRun] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [stepIndex, setStepIndex] = useState(0);\n\n  // コールバック関数\n  const handleJoyrideCallback = (data: CallBackProps) => {\n    const { action, index, status, type } = data;\n    const finishedStatuses: string[] = [STATUS.FINISHED, STATUS.SKIPPED];\n    const nextStatuses: string[] = [EVENTS.STEP_AFTER];\n\n    if (nextStatuses.includes(type)) {\n      // インデックスのインクリメント\n      setStepIndex(index + (action === ACTIONS.PREV ? -1 : 1));\n\n      // 終わり・スキップボタン押したときの処理\n    } else if (finishedStatuses.includes(status)) {\n      setRun(false);\n      setOpen(false);\n    }\n\n    // モーダルを出した時の処理\n    if (EVENTS.TARGET_NOT_FOUND === type && index === 13) {\n      setRun(false); // 一度Joyrideを切る\n      setOpen(true); // モーダルを出す\n      setStepIndex(13); // indexを指定し直す\n      // モーダルが出た状態で再びJoyrideを起動\n      setTimeout(() => {\n        setRun(true);\n      }, 400);\n    }\n\n    if (index === 14) {\n      setOpen(false);\n    }\n\n    console.groupCollapsed(type);\n    console.log(data);\n    console.groupEnd();\n  };\n\n  return (\n    <div className=\"App\">\n      <Slide setRun={setRun} open={open} />\n      <Joyride\n        callback={handleJoyrideCallback}\n        run={run}\n        steps={steps}\n        stepIndex={stepIndex}\n        locale={stepIndex < 8 ? localeEn : localeJa} // localeのところで日本語になるように\n        continuous={true}\n        scrollToFirstStep={true}\n        showProgress={true}\n        styles={{\n          options: {\n            zIndex: 10000,\n            primaryColor: stepIndex < 9 ? \"#f04\" : \"#0fbe94\", // colorのところで色が変わるように\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}