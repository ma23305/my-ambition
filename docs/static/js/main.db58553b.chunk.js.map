{"version":3,"sources":["slide.tsx","joyrideSteps.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","slide","height","color","textAlign","padding","spacing","bottonPosition","marginTop","display","justifyContent","button","width","backgroundColor","subTitle","textDecoration","content","margin","Slide","props","classes","Fragment","className","id","Typography","variant","Button","disableElevation","onClick","setRun","steps","disableBeacon","styles","options","zIndex","target","title","locale","back","close","last","next","skip","App","useState","run","continuous","scrollToFirstStep","showProgress","showSkipButton","primaryColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAKMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,OAAQ,OACRC,MAAO,OACPC,UAAW,QACXC,QAASL,EAAMM,QAAQ,IAEzBC,eAAgB,CACdC,UAAWR,EAAMM,QAAQ,IACzBG,QAAS,OACTC,eAAgB,UAElBC,OAAQ,CACNC,MAAOZ,EAAMM,QAAQ,IACrBO,gBAAiB,OACjBV,MAAO,WAETW,SAAU,CACRC,eAAgB,aAElBC,QAAS,CACPC,OAAQjB,EAAMM,QAAQ,EAAG,QA6CdY,EAzCD,SAACC,GACb,IAAMC,EAAUtB,IAChB,OACE,eAAC,IAAMuB,SAAP,WACE,sBAAKC,UAAWF,EAAQnB,MAAxB,UACE,sBAAKsB,GAAG,QAAR,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,iCACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,6EAEF,qBAAKH,UAAWF,EAAQb,eAAxB,SACE,cAACmB,EAAA,EAAD,CACED,QAAQ,YACRE,kBAAgB,EAChBL,UAAWF,EAAQT,OACnBiB,QAAS,WACPT,EAAMU,QAAO,IALjB,SAQE,cAACL,EAAA,EAAD,CAAYC,QAAQ,KAApB,0BAIN,sBAAKH,UAAWF,EAAQnB,MAAxB,UACE,cAACuB,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAWF,EAAQN,SAA5C,uCAGA,sBAAKQ,UAAWF,EAAQJ,QAAxB,UACE,cAACQ,EAAA,EAAD,CAAYC,QAAQ,KAApB,0HAGA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,sGClCKK,EAtBO,CACpB,CACEC,eAAe,EACfC,OAAQ,CACNC,QAAS,CACPC,OAAQ,IACRtB,MAAO,UAGXuB,OAAQ,SACRC,MAAO,cAACZ,EAAA,EAAD,CAAYC,QAAQ,KAApB,yFACPT,QACE,eAAC,IAAMK,SAAP,WACE,cAACG,EAAA,EAAD,CAAYC,QAAQ,KAApB,qHAGA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,qF,QCXFY,EAAS,CACbC,KAAM,eACNC,MAAO,qBACPC,KAAM,qBACNC,KAAM,eACNC,KAAM,4BA4BOC,MAzBf,WACE,MAAsBC,oBAAS,GAA/B,mBAAOC,EAAP,KAAYhB,EAAZ,KACA,OACE,sBAAKP,UAAU,MAAf,UACE,cAAC,EAAD,CAAOO,OAAQA,IACf,cAAC,IAAD,CAEEgB,IAAKA,EACLf,MAAOA,EACPO,OAAQA,EACRS,YAAY,EACZC,mBAAmB,EACnBC,cAAc,EACdC,gBAAgB,EAChBjB,OAAQ,CACNC,QAAS,CACPC,OAAQ,IACRgB,aAAc,eCpBXC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.db58553b.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  slide: {\n    height: \"95vh\",\n    color: \"#fff\",\n    textAlign: \"start\",\n    padding: theme.spacing(3),\n  },\n  bottonPosition: {\n    marginTop: theme.spacing(10),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  button: {\n    width: theme.spacing(45),\n    backgroundColor: \"#FFF\",\n    color: \"#0fbe94\",\n  },\n  subTitle: {\n    textDecoration: \"underline\",\n  },\n  content: {\n    margin: theme.spacing(5, 5),\n  },\n}));\n\nconst Slide = (props: Props) => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <div className={classes.slide}>\n        <div id=\"title\">\n          <Typography variant=\"h1\">React-Joyrideを</Typography>\n          <Typography variant=\"h1\">システムに実装したい</Typography>\n        </div>\n        <div className={classes.bottonPosition}>\n          <Button\n            variant=\"contained\"\n            disableElevation\n            className={classes.button}\n            onClick={() => {\n              props.setRun(true);\n            }}\n          >\n            <Typography variant=\"h2\">START</Typography>\n          </Button>\n        </div>\n      </div>\n      <div className={classes.slide}>\n        <Typography variant=\"h2\" className={classes.subTitle}>\n          React-Joyrideとは\n        </Typography>\n        <div className={classes.content}>\n          <Typography variant=\"h3\">\n            スマホゲームのようなチュートリアルを\n          </Typography>\n          <Typography variant=\"h3\">簡単に実装できるライブラリ</Typography>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\ntype Props = {\n  setRun: Function;\n};\n\nexport default Slide;\n","import { Step } from \"react-joyride\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst steps: Step[] = [\n  {\n    disableBeacon: true,\n    styles: {\n      options: {\n        zIndex: 10000,\n        width: \"600px\",\n      },\n    },\n    target: \"#title\",\n    title: <Typography variant=\"h4\">という野望を叶えるために...</Typography>,\n    content: (\n      <React.Fragment>\n        <Typography variant=\"h6\">\n          責任を持ってReact-Joyrideを触ってみたので、\n        </Typography>\n        <Typography variant=\"h6\">皆さんに共有したいの会</Typography>\n      </React.Fragment>\n    ),\n  },\n];\n\nexport default steps;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Slide from \"./slide\";\nimport steps from \"./joyrideSteps\";\n\nimport Joyride from \"react-joyride\";\n// import Joyride, { CallBackProps, STATUS, ACTIONS, EVENTS } from \"react-joyride\";\n\nconst locale = {\n  back: \"戻る\",\n  close: \"閉じる\",\n  last: \"終わり\",\n  next: \"次へ\",\n  skip: \"スキップ\",\n};\n\nfunction App() {\n  const [run, setRun] = useState(false);\n  return (\n    <div className=\"App\">\n      <Slide setRun={setRun} />\n      <Joyride\n        // callback={handleJoyrideCallback}\n        run={run}\n        steps={steps}\n        locale={locale}\n        continuous={true}\n        scrollToFirstStep={true}\n        showProgress={true}\n        showSkipButton={true}\n        styles={{\n          options: {\n            zIndex: 10000,\n            primaryColor: \"#099\",\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}